<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.restaurantsupply.mapper.PayloadMapper">

    <resultMap type="com.example.restaurantsupply.domain.Payload" id="PayloadMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="tag" column="tag" jdbcType="INTEGER"/>
        <result property="barcode" column="barcode" jdbcType="VARCHAR"/>
        <result property="quantity" column="quantity" jdbcType="INTEGER"/>
        <result property="price" column="price" jdbcType="INTEGER"/>
    </resultMap>


    <select id="queryById" resultMap="PayloadMap">
        select id,
               tag,
               barcode,
               quantity,
               price
        from payload
        where id = #{id}
    </select>


    <select id="queryAllByLimit" resultMap="PayloadMap">
        select id,
               tag,
               barcode,
               quantity,
               price
        from payload limit #{offset}, #{limit}
    </select>


    <select id="queryAll" resultMap="PayloadMap">
        select
        id, tag, barcode, quantity, price
        from payload
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="tag != null">
                and tag = #{tag}
            </if>
            <if test="barcode != null and barcode != ''">
                and barcode = #{barcode}
            </if>
            <if test="quantity != null">
                and quantity = #{quantity}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
        </where>
    </select>


    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        call load_drone(#{id}, #{tag}, #{barcode}, #{quantity}, #{price})
    </insert>


    <update id="update">
        update payload
        <set>
            <if test="quantity != null">
                quantity = #{quantity},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
        </set>
        where id = #{id}
    </update>


    <delete id="deleteById">
        delete
        from payload
        where id = #{id}
    </delete>

</mapper>

